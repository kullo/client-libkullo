// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from masterkey.djinni

#pragma once

#include <boost/optional.hpp>
#include <string>
#include <vector>

namespace Kullo { namespace Api {

struct MasterKey;

class MasterKeyHelpers {
public:
    virtual ~MasterKeyHelpers() {}

    /** Returns null if pem is not well-formed */
    static boost::optional<MasterKey> createFromPem(const std::string & pem);

    /** Returns null if dataBlocks is not well-formed */
    static boost::optional<MasterKey> createFromDataBlocks(const std::vector<std::string> & dataBlocks);

    /**
     * Validates a single block.
     * A block string is valid iff it contains exactly 6 digits
     * and fulfills the Luhn mod10 requirements
     */
    static bool isValidBlock(const std::string & block);

    /** Returns PEM formatted MasterKey */
    static std::string toPem(const MasterKey & masterKey);

    /**
     * Returns the MasterKey, encrypted with the given password.
     * Shouldn't be called from the UI thread as it is (deliberately) slow.
     */
    static std::string encrypt(const std::string & password, const MasterKey & masterKey);

    /**
     * Decrypted an encrypted MasterKey, given a password.
     * Shouldn't be called from the UI thread as it is (deliberately) slow.
     * Returns null if given the wrong password.
     */
    static boost::optional<MasterKey> decrypt(const std::string & password, const std::string & encryptedMasterKey);
};

} }  // namespace Kullo::Api
