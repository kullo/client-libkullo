// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from address.djinni

#pragma once

#include <memory>
#include <string>

namespace Kullo { namespace Api {

/** Represents a Kullo address */
class Address {
public:
    virtual ~Address() {}

    /**
     * Creates a new Address and converts it to lower case.
     * Returns null if the address is not well-formed.
     */
    static std::shared_ptr<Address> create(const std::string & address);

    /** Returns the whole address */
    virtual std::string toString() = 0;

    /** Returns only the part left of the hash symbol */
    virtual std::string localPart() = 0;

    /** Returns only the part right of the hash symbol */
    virtual std::string domainPart() = 0;

    virtual bool isEqualTo(const std::shared_ptr<Address> & other) = 0;

    /** Returns true iff the left-hand side is alphabetically less than rhs */
    virtual bool isLessThan(const std::shared_ptr<Address> & rhs) = 0;
};

} }  // namespace Kullo::Api
