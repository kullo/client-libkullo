// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from datetime.djinni

#pragma once

#include <cstdint>
#include <utility>

namespace Kullo { namespace Api {

struct DateTime; // Requiring extended class

struct DateTimeBase {
    int16_t year;
    int8_t month;
    int8_t day;
    int8_t hour;
    int8_t minute;
    int8_t second;
    int16_t tzOffsetMinutes;

    DateTimeBase(int16_t year_,
                 int8_t month_,
                 int8_t day_,
                 int8_t hour_,
                 int8_t minute_,
                 int8_t second_,
                 int16_t tzOffsetMinutes_)
    : year(std::move(year_))
    , month(std::move(month_))
    , day(std::move(day_))
    , hour(std::move(hour_))
    , minute(std::move(minute_))
    , second(std::move(second_))
    , tzOffsetMinutes(std::move(tzOffsetMinutes_))
    {}

    virtual ~DateTimeBase() = default;

protected:
    DateTimeBase(const DateTimeBase&) = default;
#if !defined(_MSC_VER) || _MSC_VER > 1900
    DateTimeBase(DateTimeBase&&) = default;
#endif
    DateTimeBase& operator=(const DateTimeBase&) = default;
#if !defined(_MSC_VER) || _MSC_VER > 1900
    DateTimeBase& operator=(DateTimeBase&&) = default;
#endif
};

} }  // namespace Kullo::Api
