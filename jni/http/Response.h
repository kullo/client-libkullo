// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/http/Response.h"

namespace JNI { namespace Kullo { namespace Http {

class Response final {
public:
    using CppType = ::Kullo::Http::Response;
    using JniType = jobject;

    using Boxed = Response;

    ~Response();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    Response();
    friend ::djinni::JniClass<Response>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/http/Response") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lnet/kullo/libkullo/http/ResponseError;ILjava/util/ArrayList;)V") };
    const jfieldID field_error { ::djinni::jniGetFieldID(clazz.get(), "error", "Lnet/kullo/libkullo/http/ResponseError;") };
    const jfieldID field_statusCode { ::djinni::jniGetFieldID(clazz.get(), "statusCode", "I") };
    const jfieldID field_headers { ::djinni::jniGetFieldID(clazz.get(), "headers", "Ljava/util/ArrayList;") };
};

} } }  // namespace JNI::Kullo::Http
