// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/http/Request.h"

namespace JNI { namespace Kullo { namespace Http {

class Request final {
public:
    using CppType = ::Kullo::Http::Request;
    using JniType = jobject;

    using Boxed = Request;

    ~Request();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    Request();
    friend ::djinni::JniClass<Request>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/http/Request") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lnet/kullo/libkullo/http/HttpMethod;Ljava/lang/String;Ljava/util/ArrayList;)V") };
    const jfieldID field_method { ::djinni::jniGetFieldID(clazz.get(), "method", "Lnet/kullo/libkullo/http/HttpMethod;") };
    const jfieldID field_url { ::djinni::jniGetFieldID(clazz.get(), "url", "Ljava/lang/String;") };
    const jfieldID field_headers { ::djinni::jniGetFieldID(clazz.get(), "headers", "Ljava/util/ArrayList;") };
};

} } }  // namespace JNI::Kullo::Http
