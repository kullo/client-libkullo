// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/http/HttpHeader.h"

namespace JNI { namespace Kullo { namespace Http {

class HttpHeader final {
public:
    using CppType = ::Kullo::Http::HttpHeader;
    using JniType = jobject;

    using Boxed = HttpHeader;

    ~HttpHeader();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    HttpHeader();
    friend ::djinni::JniClass<HttpHeader>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/http/HttpHeader") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_key { ::djinni::jniGetFieldID(clazz.get(), "key", "Ljava/lang/String;") };
    const jfieldID field_value { ::djinni::jniGetFieldID(clazz.get(), "value", "Ljava/lang/String;") };
};

} } }  // namespace JNI::Kullo::Http
