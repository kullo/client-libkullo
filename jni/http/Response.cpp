// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#include "Response.h"  // my header
#include "HttpHeader.h"
#include "ResponseError.h"
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Http {

Response::Response() = default;

Response::~Response() = default;

auto Response::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<Response>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::Optional<boost::optional, ::JNI::Kullo::Http::ResponseError>::fromCpp(jniEnv, c.error)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.statusCode)),
                                                           ::djinni::get(::djinni::List<::JNI::Kullo::Http::HttpHeader>::fromCpp(jniEnv, c.headers)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto Response::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 4);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<Response>::get();
    return {::djinni::Optional<boost::optional, ::JNI::Kullo::Http::ResponseError>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_error)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_statusCode)),
            ::djinni::List<::JNI::Kullo::Http::HttpHeader>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_headers))};
}

} } }  // namespace JNI::Kullo::Http
