// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/ClientCreateSessionListener.h"

namespace JNI { namespace Kullo { namespace Api {

class ClientCreateSessionListener final : ::djinni::JniInterface<::Kullo::Api::ClientCreateSessionListener, ClientCreateSessionListener> {
public:
    using CppType = std::shared_ptr<::Kullo::Api::ClientCreateSessionListener>;
    using JniType = jobject;

    using Boxed = ClientCreateSessionListener;

    ~ClientCreateSessionListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<ClientCreateSessionListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return {jniEnv, ::djinni::JniClass<ClientCreateSessionListener>::get()._toJava(jniEnv, c)}; }

private:
    ClientCreateSessionListener();
    friend ::djinni::JniClass<ClientCreateSessionListener>;
    friend ::djinni::JniInterface<::Kullo::Api::ClientCreateSessionListener, ClientCreateSessionListener>;

    class JavaProxy final : ::djinni::JavaProxyCacheEntry, public ::Kullo::Api::ClientCreateSessionListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void finished(const std::shared_ptr<::Kullo::Api::Session> & session) override;
        void error(const std::shared_ptr<::Kullo::Api::Address> & address, ::Kullo::Api::LocalError error) override;

    private:
        using ::djinni::JavaProxyCacheEntry::getGlobalRef;
        friend ::djinni::JniInterface<::Kullo::Api::ClientCreateSessionListener, ::JNI::Kullo::Api::ClientCreateSessionListener>;
        friend ::djinni::JavaProxyCache<JavaProxy>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/api/ClientCreateSessionListener") };
    const jmethodID method_finished { ::djinni::jniGetMethodID(clazz.get(), "finished", "(Lnet/kullo/libkullo/api/Session;)V") };
    const jmethodID method_error { ::djinni::jniGetMethodID(clazz.get(), "error", "(Lnet/kullo/libkullo/api/Address;Lnet/kullo/libkullo/api/LocalError;)V") };
};

} } }  // namespace JNI::Kullo::Api
