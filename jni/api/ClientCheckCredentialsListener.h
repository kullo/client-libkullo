// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/ClientCheckCredentialsListener.h"

namespace JNI { namespace Kullo { namespace Api {

class ClientCheckCredentialsListener final : ::djinni::JniInterface<::Kullo::Api::ClientCheckCredentialsListener, ClientCheckCredentialsListener> {
public:
    using CppType = std::shared_ptr<::Kullo::Api::ClientCheckCredentialsListener>;
    using CppOptType = std::shared_ptr<::Kullo::Api::ClientCheckCredentialsListener>;
    using JniType = jobject;

    using Boxed = ClientCheckCredentialsListener;

    ~ClientCheckCredentialsListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<ClientCheckCredentialsListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<ClientCheckCredentialsListener>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    ClientCheckCredentialsListener();
    friend ::djinni::JniClass<ClientCheckCredentialsListener>;
    friend ::djinni::JniInterface<::Kullo::Api::ClientCheckCredentialsListener, ClientCheckCredentialsListener>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::Kullo::Api::ClientCheckCredentialsListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void finished(const std::shared_ptr<::Kullo::Api::Address> & address, const std::shared_ptr<::Kullo::Api::MasterKey> & masterKey, bool valid) override;
        void error(const std::shared_ptr<::Kullo::Api::Address> & address, ::Kullo::Api::NetworkError error) override;

    private:
        friend ::djinni::JniInterface<::Kullo::Api::ClientCheckCredentialsListener, ::JNI::Kullo::Api::ClientCheckCredentialsListener>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/api/ClientCheckCredentialsListener") };
    const jmethodID method_finished { ::djinni::jniGetMethodID(clazz.get(), "finished", "(Lnet/kullo/libkullo/api/Address;Lnet/kullo/libkullo/api/MasterKey;Z)V") };
    const jmethodID method_error { ::djinni::jniGetMethodID(clazz.get(), "error", "(Lnet/kullo/libkullo/api/Address;Lnet/kullo/libkullo/api/NetworkError;)V") };
};

} } }  // namespace JNI::Kullo::Api
