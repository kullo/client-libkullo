// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from syncer.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/SyncProgress.h"
#include <kulloclient/nn.h>

namespace JNI { namespace Kullo { namespace Api {

class SyncProgress final {
public:
    using CppType = ::Kullo::Api::SyncProgress;
    using JniType = jobject;

    using Boxed = SyncProgress;

    ~SyncProgress();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    SyncProgress();
    friend ::djinni::JniClass<SyncProgress>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/api/SyncProgress") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lnet/kullo/libkullo/api/SyncPhase;JJJJJJJJLjava/util/HashMap;JJJ)V") };
    const jfieldID field_phase { ::djinni::jniGetFieldID(clazz.get(), "phase", "Lnet/kullo/libkullo/api/SyncPhase;") };
    const jfieldID field_incomingMessagesProcessed { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesProcessed", "J") };
    const jfieldID field_incomingMessagesTotal { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesTotal", "J") };
    const jfieldID field_incomingMessagesNew { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesNew", "J") };
    const jfieldID field_incomingMessagesNewUnread { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesNewUnread", "J") };
    const jfieldID field_incomingMessagesModified { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesModified", "J") };
    const jfieldID field_incomingMessagesDeleted { ::djinni::jniGetFieldID(clazz.get(), "incomingMessagesDeleted", "J") };
    const jfieldID field_incomingAttachmentsDownloadedBytes { ::djinni::jniGetFieldID(clazz.get(), "incomingAttachmentsDownloadedBytes", "J") };
    const jfieldID field_incomingAttachmentsTotalBytes { ::djinni::jniGetFieldID(clazz.get(), "incomingAttachmentsTotalBytes", "J") };
    const jfieldID field_incomingAttachments { ::djinni::jniGetFieldID(clazz.get(), "incomingAttachments", "Ljava/util/HashMap;") };
    const jfieldID field_outgoingMessagesUploadedBytes { ::djinni::jniGetFieldID(clazz.get(), "outgoingMessagesUploadedBytes", "J") };
    const jfieldID field_outgoingMessagesTotalBytes { ::djinni::jniGetFieldID(clazz.get(), "outgoingMessagesTotalBytes", "J") };
    const jfieldID field_runTimeMs { ::djinni::jniGetFieldID(clazz.get(), "runTimeMs", "J") };
};

} } }  // namespace JNI::Kullo::Api
