// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from drafts.djinni

#include "DraftAttachmentsContentListener.h"  // my header
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

DraftAttachmentsContentListener::DraftAttachmentsContentListener() : ::djinni::JniInterface<::Kullo::Api::DraftAttachmentsContentListener, DraftAttachmentsContentListener>() {}

DraftAttachmentsContentListener::~DraftAttachmentsContentListener() = default;

DraftAttachmentsContentListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

DraftAttachmentsContentListener::JavaProxy::~JavaProxy() = default;

void DraftAttachmentsContentListener::JavaProxy::finished(int64_t c_convId, int64_t c_attId, const std::vector<uint8_t> & c_content) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::DraftAttachmentsContentListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_finished,
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_convId)),
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_attId)),
                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c_content)));
    ::djinni::jniExceptionCheck(jniEnv);
}

} } }  // namespace JNI::Kullo::Api
