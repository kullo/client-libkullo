// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from session.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/InternalEvent.h"
#include <kulloclient/nn.h>

namespace JNI { namespace Kullo { namespace Api {

class InternalEvent final : ::djinni::JniInterface<::Kullo::Api::InternalEvent, InternalEvent> {
public:
    using CppType = ::Kullo::nn_shared_ptr<::Kullo::Api::InternalEvent>;
    using CppOptType = std::shared_ptr<::Kullo::Api::InternalEvent>;
    using JniType = jobject;

    using Boxed = InternalEvent;

    ~InternalEvent();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) {
        DJINNI_ASSERT_MSG(j, jniEnv, "InternalEvent::fromCpp requires a non-null Java object");
        return kulloForcedNn(::djinni::JniClass<InternalEvent>::get()._fromJava(jniEnv, j));
    };
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<InternalEvent>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    InternalEvent();
    friend ::djinni::JniClass<InternalEvent>;
    friend ::djinni::JniInterface<::Kullo::Api::InternalEvent, InternalEvent>;

};

} } }  // namespace JNI::Kullo::Api
