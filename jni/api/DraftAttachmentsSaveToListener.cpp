// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from drafts.djinni

#include "DraftAttachmentsSaveToListener.h"  // my header
#include "LocalError.h"
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

DraftAttachmentsSaveToListener::DraftAttachmentsSaveToListener() : ::djinni::JniInterface<::Kullo::Api::DraftAttachmentsSaveToListener, DraftAttachmentsSaveToListener>() {}

DraftAttachmentsSaveToListener::~DraftAttachmentsSaveToListener() = default;

DraftAttachmentsSaveToListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

DraftAttachmentsSaveToListener::JavaProxy::~JavaProxy() = default;

void DraftAttachmentsSaveToListener::JavaProxy::finished(int64_t c_convId, int64_t c_attId, const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::DraftAttachmentsSaveToListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_finished,
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_convId)),
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_attId)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void DraftAttachmentsSaveToListener::JavaProxy::error(int64_t c_convId, int64_t c_attId, const std::string & c_path, ::Kullo::Api::LocalError c_error) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::DraftAttachmentsSaveToListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_error,
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_convId)),
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_attId)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)),
                           ::djinni::get(::JNI::Kullo::Api::LocalError::fromCpp(jniEnv, c_error)));
    ::djinni::jniExceptionCheck(jniEnv);
}

} } }  // namespace JNI::Kullo::Api
