// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#include "SyncerListener.h"  // my header
#include "NetworkError.h"
#include "SyncProgress.h"
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

SyncerListener::SyncerListener() : ::djinni::JniInterface<::Kullo::Api::SyncerListener, SyncerListener>() {}

SyncerListener::~SyncerListener() = default;

SyncerListener::JavaProxy::JavaProxy(JniType j) : JavaProxyCacheEntry(j) { }

SyncerListener::JavaProxy::~JavaProxy() = default;

void SyncerListener::JavaProxy::draftAttachmentsTooBig(int64_t c_convId) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::SyncerListener>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_draftAttachmentsTooBig,
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_convId)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void SyncerListener::JavaProxy::progressed(const ::Kullo::Api::SyncProgress & c_progress) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::SyncerListener>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_progressed,
                           ::djinni::get(::JNI::Kullo::Api::SyncProgress::fromCpp(jniEnv, c_progress)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void SyncerListener::JavaProxy::finished() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::SyncerListener>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_finished);
    ::djinni::jniExceptionCheck(jniEnv);
}
void SyncerListener::JavaProxy::error(::Kullo::Api::NetworkError c_error) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::SyncerListener>::get();
    jniEnv->CallVoidMethod(getGlobalRef(), data.method_error,
                           ::djinni::get(::JNI::Kullo::Api::NetworkError::fromCpp(jniEnv, c_error)));
    ::djinni::jniExceptionCheck(jniEnv);
}

} } }  // namespace JNI::Kullo::Api
