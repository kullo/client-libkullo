// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/SessionAccountInfoListener.h"

namespace JNI { namespace Kullo { namespace Api {

class SessionAccountInfoListener final : ::djinni::JniInterface<::Kullo::Api::SessionAccountInfoListener, SessionAccountInfoListener> {
public:
    using CppType = std::shared_ptr<::Kullo::Api::SessionAccountInfoListener>;
    using JniType = jobject;

    using Boxed = SessionAccountInfoListener;

    ~SessionAccountInfoListener();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<SessionAccountInfoListener>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return {jniEnv, ::djinni::JniClass<SessionAccountInfoListener>::get()._toJava(jniEnv, c)}; }

private:
    SessionAccountInfoListener();
    friend ::djinni::JniClass<SessionAccountInfoListener>;
    friend ::djinni::JniInterface<::Kullo::Api::SessionAccountInfoListener, SessionAccountInfoListener>;

    class JavaProxy final : ::djinni::JavaProxyCacheEntry, public ::Kullo::Api::SessionAccountInfoListener
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void finished(const ::Kullo::Api::AccountInfo & accountInfo) override;
        void error(::Kullo::Api::NetworkError error) override;

    private:
        using ::djinni::JavaProxyCacheEntry::getGlobalRef;
        friend ::djinni::JniInterface<::Kullo::Api::SessionAccountInfoListener, ::JNI::Kullo::Api::SessionAccountInfoListener>;
        friend ::djinni::JavaProxyCache<JavaProxy>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/api/SessionAccountInfoListener") };
    const jmethodID method_finished { ::djinni::jniGetMethodID(clazz.get(), "finished", "(Lnet/kullo/libkullo/api/AccountInfo;)V") };
    const jmethodID method_error { ::djinni::jniGetMethodID(clazz.get(), "error", "(Lnet/kullo/libkullo/api/NetworkError;)V") };
};

} } }  // namespace JNI::Kullo::Api
