// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from masterkey.djinni

#include "MasterKeyHelpers.h"  // my header
#include "MasterKey.h"
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

MasterKeyHelpers::MasterKeyHelpers() : ::djinni::JniInterface<::Kullo::Api::MasterKeyHelpers, MasterKeyHelpers>("net/kullo/libkullo/api/MasterKeyHelpers$CppProxy") {}

MasterKeyHelpers::~MasterKeyHelpers() = default;


CJNIEXPORT void JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::Kullo::Api::MasterKeyHelpers>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_createFromPem(JNIEnv* jniEnv, jobject /*this*/, jstring j_pem)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::createFromPem(::djinni::String::toCpp(jniEnv, j_pem));
        return ::djinni::release(::djinni::Optional<boost::optional, ::JNI::Kullo::Api::MasterKey>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_createFromDataBlocks(JNIEnv* jniEnv, jobject /*this*/, jobject j_dataBlocks)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::createFromDataBlocks(::djinni::List<::djinni::String>::toCpp(jniEnv, j_dataBlocks));
        return ::djinni::release(::djinni::Optional<boost::optional, ::JNI::Kullo::Api::MasterKey>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_isValidBlock(JNIEnv* jniEnv, jobject /*this*/, jstring j_block)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::isValidBlock(::djinni::String::toCpp(jniEnv, j_block));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_toPem(JNIEnv* jniEnv, jobject /*this*/, jobject j_masterKey)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::toPem(::JNI::Kullo::Api::MasterKey::toCpp(jniEnv, j_masterKey));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_encrypt(JNIEnv* jniEnv, jobject /*this*/, jstring j_password, jobject j_masterKey)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::encrypt(::djinni::String::toCpp(jniEnv, j_password),
                                                         ::JNI::Kullo::Api::MasterKey::toCpp(jniEnv, j_masterKey));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_net_kullo_libkullo_api_MasterKeyHelpers_00024CppProxy_decrypt(JNIEnv* jniEnv, jobject /*this*/, jstring j_password, jstring j_encryptedMasterKey)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::Kullo::Api::MasterKeyHelpers::decrypt(::djinni::String::toCpp(jniEnv, j_password),
                                                         ::djinni::String::toCpp(jniEnv, j_encryptedMasterKey));
        return ::djinni::release(::djinni::Optional<boost::optional, ::JNI::Kullo::Api::MasterKey>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

} } }  // namespace JNI::Kullo::Api
