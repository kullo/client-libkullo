// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from registry.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/Registry.h"

namespace JNI { namespace Kullo { namespace Api {

class Registry final : ::djinni::JniInterface<::Kullo::Api::Registry, Registry> {
public:
    using CppType = std::shared_ptr<::Kullo::Api::Registry>;
    using CppOptType = std::shared_ptr<::Kullo::Api::Registry>;
    using JniType = jobject;

    using Boxed = Registry;

    ~Registry();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<Registry>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<Registry>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    Registry();
    friend ::djinni::JniClass<Registry>;
    friend ::djinni::JniInterface<::Kullo::Api::Registry, Registry>;

};

} } }  // namespace JNI::Kullo::Api
