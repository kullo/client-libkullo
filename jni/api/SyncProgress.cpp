// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from syncer.djinni

#include "SyncProgress.h"  // my header
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

SyncProgress::SyncProgress() = default;

SyncProgress::~SyncProgress() = default;

auto SyncProgress::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<SyncProgress>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countLeft)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countProcessed)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countTotal)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countNew)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countNewUnread)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countModified)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.countDeleted)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.runTimeMs)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto SyncProgress::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 9);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<SyncProgress>::get();
    return {::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countLeft)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countProcessed)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countTotal)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countNew)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countNewUnread)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countModified)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_countDeleted)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_runTimeMs))};
}

} } }  // namespace JNI::Kullo::Api
