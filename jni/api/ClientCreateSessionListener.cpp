// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client.djinni

#include "ClientCreateSessionListener.h"  // my header
#include "Address.h"
#include "LocalError.h"
#include "Session.h"

namespace JNI { namespace Kullo { namespace Api {

ClientCreateSessionListener::ClientCreateSessionListener() : ::djinni::JniInterface<::Kullo::Api::ClientCreateSessionListener, ClientCreateSessionListener>() {}

ClientCreateSessionListener::~ClientCreateSessionListener() = default;

ClientCreateSessionListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

ClientCreateSessionListener::JavaProxy::~JavaProxy() = default;

void ClientCreateSessionListener::JavaProxy::migrationStarted(const ::Kullo::Api::Address & c_address) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::ClientCreateSessionListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_migrationStarted,
                           ::djinni::get(::JNI::Kullo::Api::Address::fromCpp(jniEnv, c_address)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void ClientCreateSessionListener::JavaProxy::finished(const ::Kullo::nn_shared_ptr<::Kullo::Api::Session> & c_session) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::ClientCreateSessionListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_finished,
                           ::djinni::get(::JNI::Kullo::Api::Session::fromCpp(jniEnv, c_session)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void ClientCreateSessionListener::JavaProxy::error(const ::Kullo::Api::Address & c_address, ::Kullo::Api::LocalError c_error) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::JNI::Kullo::Api::ClientCreateSessionListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_error,
                           ::djinni::get(::JNI::Kullo::Api::Address::fromCpp(jniEnv, c_address)),
                           ::djinni::get(::JNI::Kullo::Api::LocalError::fromCpp(jniEnv, c_error)));
    ::djinni::jniExceptionCheck(jniEnv);
}

} } }  // namespace JNI::Kullo::Api
