// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from session.djinni

#include "AccountInfo.h"  // my header
#include "jni/support-lib/jni/Marshal.hpp"

namespace JNI { namespace Kullo { namespace Api {

AccountInfo::AccountInfo() = default;

AccountInfo::~AccountInfo() = default;

auto AccountInfo::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<AccountInfo>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::Optional<boost::optional, ::djinni::String>::fromCpp(jniEnv, c.planName)),
                                                           ::djinni::get(::djinni::Optional<boost::optional, ::djinni::I64>::fromCpp(jniEnv, c.storageQuota)),
                                                           ::djinni::get(::djinni::Optional<boost::optional, ::djinni::I64>::fromCpp(jniEnv, c.storageUsed)),
                                                           ::djinni::get(::djinni::Optional<boost::optional, ::djinni::String>::fromCpp(jniEnv, c.settingsUrl)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto AccountInfo::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<AccountInfo>::get();
    return {::djinni::Optional<boost::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_planName)),
            ::djinni::Optional<boost::optional, ::djinni::I64>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_storageQuota)),
            ::djinni::Optional<boost::optional, ::djinni::I64>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_storageUsed)),
            ::djinni::Optional<boost::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_settingsUrl))};
}

} } }  // namespace JNI::Kullo::Api
