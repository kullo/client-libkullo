// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from session.djinni

#pragma once

#include "jni/support-lib/jni/djinni_support.hpp"
#include "kulloclient/api/Event.h"

namespace JNI { namespace Kullo { namespace Api {

class Event final {
public:
    using CppType = ::Kullo::Api::Event;
    using JniType = jobject;

    using Boxed = Event;

    ~Event();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    Event();
    friend ::djinni::JniClass<Event>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/kullo/libkullo/api/Event") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lnet/kullo/libkullo/api/EventType;JJJ)V") };
    const jfieldID field_event { ::djinni::jniGetFieldID(clazz.get(), "event", "Lnet/kullo/libkullo/api/EventType;") };
    const jfieldID field_conversationId { ::djinni::jniGetFieldID(clazz.get(), "conversationId", "J") };
    const jfieldID field_messageId { ::djinni::jniGetFieldID(clazz.get(), "messageId", "J") };
    const jfieldID field_attachmentId { ::djinni::jniGetFieldID(clazz.get(), "attachmentId", "J") };
};

} } }  // namespace JNI::Kullo::Api
